/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
  // Support convention plugins written in Kotlin. Convention plugins are build scripts in 'src/main' that automatically become available as plugins in the main build.
  `kotlin-dsl`
}

repositories {
  // Use the plugin portal to apply community plugins in convention plugins.
  gradlePluginPortal()
}

object PluginVersions {
  const val kotlin = "1.8.10"
  const val gradle = "1.8.10"
  const val allOpen = "1.8.10"

  const val springDependency = "1.0.11.RELEASE"
  const val springBootVersion = "3.0.4"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
    kotlinOptions.jvmTarget = "17"
}

dependencies {
  implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:${PluginVersions.gradle}")

  //id("org.jetbrains.kotlin.plugin.spring")
  implementation("org.jetbrains.kotlin:kotlin-allopen:${PluginVersions.allOpen}")
  //id("org.springframework.boot")
  implementation("org.springframework.boot:spring-boot-gradle-plugin:${PluginVersions.springBootVersion}")
  //id("io.spring.dependency-management")
  implementation("io.spring.gradle:dependency-management-plugin:${PluginVersions.springDependency}")
}
